from manim import *

class Aussage(Scene):
    def construct(self):
        author = Text("Mathetastic",font_size=11, color=PINK)
        author.to_corner(DR)
        course = Text("Grundlagen",font_size=11, color=PINK)
        course.to_corner(DL)
        title = Text("Aussage")
        basel= Text("Definition", font_size=27)
        self.add(author)
        self.add(course)
        self.play(Write(title))
        VGroup(title, basel).arrange(DOWN)
        self.wait(2)
        self.play(FadeIn(basel, shift=DOWN))
        transform_title = Text("Definition")
        transform_title.to_corner(UP + LEFT)
        self.play(
            Transform(basel, transform_title),
            LaggedStart(*[FadeOut(obj, shift=DOWN) for obj in title]),
        )
        definition = MarkupText(
            f'Eine <span underline="single" underline_color="white">Aussage</span> ist ein mathematischer oder sprachlicher Satz, \n welchen genau ein <span fgcolor="{YELLOW}">Wahrheitswert</span> zugeordnet wird.',
            font_size=22
        )
        
        self.play(FadeIn(definition))
        wahrheitswert = MarkupText(f'Das heißt, die Aussage ist entweder <span fgcolor="{GREEN}">wahr</span> oder <span fgcolor="{RED}">falsch</span>. ', font_size=22)
        self.wait(2)
        VGroup(definition, wahrheitswert).arrange(DOWN)
        self.play(Write(wahrheitswert))
        self.wait(4)
        self.play(FadeOut(definition, wahrheitswert))
        subtitle= Text("Beispiele")
        subtitle.to_corner(UL)
        self.play(Transform(basel,subtitle))
        self.wait(3)
        liste = BulletedList("7+5=14","Paris ist eine schöne Stadt","Es schneit", "Nico ist schlau" )
        self.play(AddTextWordByWord(liste),run_time=5)
        self.wait(5)
        liste.set_color_by_tex("7+5=14", GREEN)
        liste.set_color_by_tex("Es schneit", GREEN)
        liste.set_color_by_tex("Paris ist eine schöne Stadt", RED)
        liste.set_color_by_tex("Nico ist schlau", RED)
        self.wait(4)
        self.play(*[FadeOut(obj, shift=RIGHT) for obj in liste], FadeOut(basel))
        wahr= Text("7+5=14", color=GREEN)
        wahr.to_corner(UL)
        erklärung = BulletedList("Ergebnis ist falsch", "Wahrheitswert ist eindeutig (falsch)", font_size=30)
        self.play(FadeIn(wahr))
        self.wait(3)
        self.play(FadeIn(erklärung))
        self.wait(4)
        folgerung= MathTex(r"\implies Aussage")
        VGroup(erklärung,folgerung).arrange(RIGHT)
        self.play(Write(folgerung))
        self.wait(3)
        self.play(FadeOut(folgerung),FadeOut(wahr),FadeOut(erklärung))
        wahr1= Text("Es schneit", color=GREEN)
        erklärung1 = BulletedList("Situationsabhänig", "kein Interpretationsspielraum", font_size=30)
        wahr1.to_corner(UL)
        self.play(FadeIn(wahr1))
        VGroup(erklärung1,folgerung).arrange(RIGHT)
        self.wait(1)
        self.play(Write(erklärung1))
        self.wait(4)
        self.play(Write(folgerung))
        self.wait(2)
        self.play(FadeOut(wahr1), *[FadeOut(obj, shift=RIGHT) for obj in erklärung1], *[FadeOut(obj, shift=RIGHT) for obj in folgerung])
        self.wait(1)
        falsch =Text("Paris ist eine schöne Stadt",color=RED,font_size=35)
        falsch.to_corner(UL)
        folgerung = MathTex(r"\nRightarrow Aussage")
        wieso = BulletedList("subjektiv", "nicht eindeutig", font_size=30)
        self.play(FadeIn(falsch))
        self.wait(2)
        self.play(Write(wieso))
        self.wait(4)
        VGroup(wieso,folgerung).arrange(RIGHT)
        self.play(Write(folgerung))
        self.wait(4)
        self.play(FadeOut(folgerung),FadeOut(falsch),FadeOut(wieso))
        self.wait(1)
        falsch1 = Text("Nico ist schlau", color=RED)
        wieso1 = BulletedList("nicht eindeutig definiert", "nicht konkret", font_size=30)
        falsch1.to_corner(UL)
        self.play(FadeIn(falsch1))
        self.wait(2)
        self.play(Write(wieso1))
        self.wait(4)
        VGroup(wieso1,folgerung).arrange(RIGHT)
        self.play(Write(folgerung))
        self.wait(3)
        self.play(FadeOut(folgerung, falsch1, wieso1))
        self.wait(2)
        